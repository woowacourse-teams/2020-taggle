plugins {
    id "org.asciidoctor.convert" version "1.5.8"
    id "com.moowork.node"
}

node {
    workDir = file("../../frontend")
    nodeModulesDir = file("../../frontend")
}

task buildFrontend(type: NpmTask, dependsOn: 'npmInstall') {
    description = "Build vue.js"
    args = ['run', 'build']
}

processResources.dependsOn 'buildFrontend'

ext {
    snippetsDir = file('build/generated-snippets')
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into "BOOT-INF/classes/static/docs"
    }
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/asciidoc/html5")
    into file("src/main/resources/static/docs")
}

task copyConfigSettings(type: Copy) {
    description = "Copy application-slack.yml from taggle-secret"
    from '../taggle-secret'
    into 'src/main/resources/'
}

build {
    dependsOn copyDocument
    dependsOn copyConfigSettings
}

tasks.jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'BUNDLE'

            limit {
                counter = 'INSTRUCTION'
                value = 'COVEREDRATIO'
                minimum = 0.70
            }
        }

        rule {
            enabled = true
            element = 'CLASS'

            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.80
            }

            excludes = [
                    'kr.taggle.authentication.UserArgumentResolver',
                    'kr.taggle.user.dto.OAuthAttributes'
            ]
        }
    }
}

sonarqube {
    properties {
        property "sonar.exclusions", "*.doc, **/*Doc*.java, **/*Set*.java, **/DatabaseCleanup.java, **/WebApplication.java, **/CustomOAuth2UserService.java"
    }
}


dependencies {
    implementation project(':taggle-core')
    implementation project(':taggle-crawler-api')

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation('org.springframework.boot:spring-boot-starter-actuator')

    implementation 'org.mariadb.jdbc:mariadb-java-client'
    implementation 'org.flywaydb:flyway-core'
    implementation 'com.github.maricn:logback-slack-appender:1.4.0'
    implementation 'net.rakugakibox.spring.boot:logback-access-spring-boot-starter:2.7.1'

    testImplementation 'io.rest-assured:rest-assured:3.3.0'
    testImplementation 'io.rest-assured:spring-mock-mvc:3.3.0'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation 'org.springframework:spring-webmvc:5.2.7.RELEASE'
    implementation 'net.rakugakibox.util:yaml-resource-bundle:1.1'
    implementation 'com.google.guava:guava:29.0-jre'

    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.1.RELEASE'
}
